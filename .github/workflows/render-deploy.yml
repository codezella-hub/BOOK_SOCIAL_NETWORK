name: Build, Analyze and Deploy to Render (Laravel Docker)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}

jobs:
  build-analyze-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # --- Étape 1 : Checkout du code
      - name: Checkout
        uses: actions/checkout@v4

      # --- Étape 2 : Setup PHP pour SonarQube
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, bcmath, curl, json, tokenizer
          coverage: xdebug

      # --- Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: |
          composer install --no-progress --no-suggest --prefer-dist
          php artisan config:clear

      # --- Étape 4 : Lancer l’analyse SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.projectKey=book_social_network
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # --- Étape 5 : Configurer Docker Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- Étape 6 : Connexion à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- Étape 7 : Métadonnées Docker
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha

      # --- Étape 8 : Build et Push de l’image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # --- Étape 9 : Déploiement Render
      - name: Trigger Render deploy via Deploy Hook
        env:
          DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          echo "Triggering deploy on Render via Deploy Hook"
          curl -fsS -X POST "$DEPLOY_HOOK"
